//                               █         █    █            ▄▄▄▀▀▀▀▀▀▄▄▄        █▀▀▀▀▀▀▀▀▀▀█
//                               █        █     █          ▄▀            ▀▄      █          █
//                               █       █      █        ▄▀                ▀▄    █          █
//                               █      █       █        █                  █    █          █
//                               █     █        █       █                    █   █          █
//                               █    █         █       █                    █   █▄▄▄▄▄▄▄▄▄▄█
//                               █   █ █        █       █                    █   █      █
//                               █  █   █       █        █                  █    █       █
//                               █ █     █      █        ▀▄                ▄▀    █        █
//                               ██       █     █          ▀▄            ▄▀      █         █
//                               █         █    █▄▄▄▄▄▄▄▄    ▀▀▀▄▄▄▄▄▄▀▀▀        █          █
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10
#define ZMK_MOUSE_SCRL_VAL 140

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE   0
#define RAISE  1
#define LOWER  2
#define ADJUST 3

&led_strip { chain-length = <21>; };

&sensors {
    left_encoder { triggers-per-rotation = <15>; };

    right_encoder { triggers-per-rotation = <15>; };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        scroll_up_down: scroll_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <150>;
            label = "scroll_up_down";
        };

        scroll_left_right: scroll_left_right {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_LEFT>, <&msc SCRL_RIGHT>;

            tap-ms = <150>;   // Ensures the event is very brief
            label = "scroll_left_right";
        };

        /* --- External Power Control --- */

        ext_power_ctrl: ext_power_ctrl {
            compatible = "zmk,behavior-ext-power";
            label = "External Power Control";
            #binding-cells = <1>;
            states = <EP_ON EP_OFF EP_TOGGLE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_closetab {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&macro_closetab>;
        };

        combo_lasttab {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&macro_lasttab>;
        };
    };

    macros {
        macro_closetab: macro_closetab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp F4>,
                <&macro_release>,
                <&kp LCTRL>;
        };

        macro_lasttab: macro_lasttab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp LS(T)>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┌───────────────────────────────────────────────────────────┐

            label = "BASE";

            // └───────────────────────────────────────────────────────────┘
            /*           ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │    Q    │    W    │    E    │    R    │    T    │                    │    Y    │    U    │    I    │    O    │    P    │   
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │   TAB   │    A    │    S    │    D    │    F    │    G    │                    │    H    │    J    │    K    │    L    │    ;    │    '    │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │   CTRL  │    Z    │    X    │    C    │    V    │    B    ││  MUTE  ││PLY/PSE ││    N    │    M    │    ,    │    .    │    /    │    \    │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │  LCMD   │  LOWER  │  RALT   │  SPACE  ││  BSPCE  │  ENTER  │  RAISE  │    DEL  │  
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
       &kp Q         &kp W               &kp E             &kp R               &kp T                        &kp Y  &hm UNDER U  &hm EXCLAMATION I      &kp O             &kp P
&none  &kp A         &hm LEFT_CONTROL S  &hm LEFT_ALT D    &hm LEFT_COMMAND F  &kp G                        &kp H  &hm RCMD J   &hm RALT K             &hm RSHFT L       &kp RETURN     &none
&none  &hm LSHIFT Z  &kp X               &kp C             &kp V               &kp B  &kp C_MUTE  &kp C_PP  &kp N  &kp M        &hm SQT COMMA          &hm QUESTION DOT  &kp BACKSPACE  &none
                                         &kp LEFT_CONTROL  &kp SPACE           &mo 1  &none       &none     &mo 2  &kp SPACE    &hm TILDE EXCLAMATION
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_up_down>;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        raise_layer {
            // ┌───────────────────────────────────────────────────────────┐

            label = "RAISE";

            // └───────────────────────────────────────────────────────────┘
            /*           ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │ RGB_SPI │ RGB_HUI │         │         │    {    │                    │    }    │   LEFT  │   UP    │  RIGHT  │   HOME  │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │ RGB_BRI │ RGB_EFF │         │         │         │    [    │                    │    ]    │         │  DOWN   │         │  PSCRN  │  P UP   │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │ RGB_BRD │ RGB_SPD │ RGB_HUD │         │         │    (    ││  MUTE  ││PLY/PASE││    )    │         │         │         │   END   │ P DOWN  │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │         │         │         │  LSHIFT ││  RSHIFT │         │         │  ADJUST │  
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
       &kp TAB   &kp TAB   &kp HASH          &kp DOLLAR  &kp LBRC                        &kp RBRC  &kp LEFT          &kp UP      &kp RIGHT           &kp RSHFT
&none  &kp CAPS  &kt CAPS  &kp PLUS          &kp MINUS   &kp LBKT                        &kp RBKT  &kp RC(UP_ARROW)  &kp DOWN    &kp RG(TAB)         &kp C_NEXT  &kp PG_UP
&none  &none     &kp TAB   &kp ASTRK         &kp SLASH   &kp LPAR  &kp C_MUTE  &kp C_PP  &kp RPAR  &kp TAB           &kp TAB     &kp RC(DOWN_ARROW)  &kp C_PREV  &kp PG_DN
                           &kp LEFT_COMMAND  &kp LALT    &none     &none       &none     &mo 3     &kp RGUI          &kp C_NEXT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &scroll_left_right>;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        lower_layer {
            // ┌───────────────────────────────────────────────────────────┐

            label = "LOWER";

            // └───────────────────────────────────────────────────────────┘
            /*           ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │   F1    │   F2    │   F3    │   F4    │   F5    │                    │   F6    │   F7    │   F8    │   F9    │   F10   │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │    -    │    !    │    @    │    #    │    $    │    %    │                    │    ^    │    &    │    `    │    ~    │    =    │    +    │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │    _    │    1    │    2    │    3    │    4    │    5    ││  MUTE  ││PLY/PASE││    6    │    7    │    8    │    9    │    0    │    *    │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │         │         │         │  LSHIFT ││  RSHIFT │         │         │         │  
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
       &kp F1    &kp F2  &hm LS(LG(F3)) F3  &hm LS(LG(RS(F4))) F4  &kp F5                           &kp F6     &kp F7         &kp F8          &kp F9     &kp F10
&none  &kp EXCL  &kp AT  &kp POUND          &kp DLLR               &kp PRCNT                        &kp CARET  &kp AMPS       &kp GRAVE       &kp TILDE  &kp EQUAL  &none
&none  &kp N1    &kp N2  &kp N3             &kp N4                 &kp N5     &kp C_MUTE  &kp C_PP  &kp N6     &kp N7         &kp N8          &kp N9     &kp N0     &none
                         &kp TAB            &kp LEFT_COMMAND       &kp CAPS   &none       &none     &none      &kp RG(SPACE)  &mt LALT SPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV>;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        adjust_layer {
            // ┌───────────────────────────────────────────────────────────┐

            label = "ADJUST";

            // └───────────────────────────────────────────────────────────┘
            /*           ┌─────────┬─────────┬─────────┬─────────┬─────────┐                    ┌─────────┬─────────┬─────────┬─────────┬─────────┐
             │ BT_CLR  │         │         │         │         │                    │         │         │         │         │ BT_CLR  │
   ┌─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤                    ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┐
   │         │ BT_NXT  │         │         │         │         │                    │         │         │         │         │ BT_NXT  │         │
   ├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤╭────────╮╭────────╮├─────────┼─────────┼─────────┼─────────┼─────────┼─────────┤
   │         │ BT_PRV  │         │         │         │         ││  MUTE  ││PLY/PASE││         │         │         │         │ BT_PRV  │         │
   └─────────┴─────────┴─────────┼─────────┼─────────┼─────────┼╰────────╯╰────────╯┼─────────┼─────────┼─────────┼─────────┴─────────┴─────────┘
                                 │         │         │         │         ││         │         │         │         │  
                                 └─────────┴─────────┴─────────┴─────────┘└─────────┴─────────┴─────────┴─────────┘ */

            bindings = <
       &bt BT_CLR  &none  &none  &none  &none                                    &none             &none  &none  &none  &bt BT_CLR
&none  &bt BT_NXT  &none  &none  &none  &none                                    &none             &none  &none  &none  &bt BT_NXT  &none
&none  &bt BT_PRV  &none  &none  &none  &ext_power EP_OFF  &kp C_MUTE  &kp C_PP  &ext_power EP_ON  &none  &none  &none  &bt BT_PRV  &none
                          &none  &none  &none              &none       &none     &none             &none  &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp C_NEXT C_PREV>;
        };
    };
};
